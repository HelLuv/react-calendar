{"version":3,"sources":["store/reducers/auth/types.ts","utils/date.ts","components/EventCalendar.tsx","utils/rules.ts","hooks/useTypedSelector.ts","components/EventForm.tsx","store/reducers/event/types.ts","api/UserService.ts","store/reducers/auth/action-creators.ts","store/reducers/event/action-creators.ts","routes/index.ts","store/reducers/action-creators.ts","hooks/useActions.tsx","components/LoginForm.tsx","pages/Login.tsx","pages/Event.tsx","components/AppRouter.tsx","components/Navbar.tsx","App.tsx","store/reducers/auth/index.ts","store/reducers/event/index.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["AuthActionEnum","formatDate","date","year","getFullYear","month","getMonth","day","getDate","EventCalendar","props","dateCellRender","value","formatedDate","toDate","currentDayEvents","events","filter","ev","map","index","description","rules","message","required","validator","_","isSameOrAfter","moment","Promise","resolve","reject","Error","useTypedSelector","useSelector","EventForm","useState","author","guest","event","setEvent","user","state","auth","onFinish","submit","username","Item","label","name","onChange","e","target","SelectDate","mode","showSearch","allowClear","style","width","placeholder","guests","Option","justify","wrapperCol","type","htmlType","EventActionEnum","UserService","axios","get","AuthActionCreators","setUser","SET_USER","payload","setIsAuth","SET_AUTH","setIsLoading","isLoading","SET_IS_LOADING","setError","error","SET_ERROR","login","password","dispatch","a","setTimeout","getUsers","response","mockUser","data","find","localStorage","setItem","logout","removeItem","alert","RouteNames","EventActionCreators","setGuests","SET_GUESTS","setEvents","SET_EVENTS","fetchGuests","console","log","createEvent","getItem","json","JSON","parse","push","stringify","fetchEvents","currentUserEvents","allActionCreators","useActions","useDispatch","bindActionCreators","LoginForm","setUsername","setPassword","color","Password","loading","publicRoutes","path","LOGIN","exact","component","align","className","privateRoutes","EVENT","modalVisible","setModalVisible","useEffect","onClick","title","visible","footer","onCancel","AppRouter","isAuth","route","to","Navbar","router","useHistory","Header","theme","selectable","App","Content","initialState","action","rootReducer","combineReducers","reducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01a5cca9.chunk.js","sourcesContent":["import { IUser } from '../../../models/IUser';\r\n\r\nexport interface AuthState {\r\n\tisAuth: boolean;\r\n\tuser: IUser;\r\n\tisLoading: boolean;\r\n\terror: string;\r\n}\r\n\r\nexport enum AuthActionEnum {\r\n\tSET_AUTH = 'SET_AUTH',\r\n\tSET_ERROR = 'SET_ERROR',\r\n\tSET_USER = 'SET_USER',\r\n\tSET_IS_LOADING = 'SET_IS_LOADING',\r\n}\r\n\r\nexport interface SetAuthAction {\r\n\ttype: AuthActionEnum.SET_AUTH;\r\n\tpayload: boolean;\r\n}\r\n\r\nexport interface SetErrorAction {\r\n\ttype: AuthActionEnum.SET_ERROR;\r\n\tpayload: string;\r\n}\r\n\r\nexport interface SetUserAction {\r\n\ttype: AuthActionEnum.SET_USER;\r\n\tpayload: IUser;\r\n}\r\nexport interface SetIsLoadingAction {\r\n\ttype: AuthActionEnum.SET_IS_LOADING;\r\n\tpayload: boolean;\r\n}\r\n\r\nexport type AuthAction = SetAuthAction | SetErrorAction | SetUserAction | SetIsLoadingAction","\r\nexport const formatDate = (date: Date): string => {\r\n\tconst year = date.getFullYear();\r\n\tconst month = date.getMonth() < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\r\n\tconst day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\r\n\r\n\treturn `${year}-${month}-${day}`;\r\n}","import { Badge, Calendar } from 'antd'\r\nimport React, { FC } from 'react'\r\nimport { IEvent } from '../models/IEvent';\r\nimport { Moment } from 'moment';\r\nimport { formatDate } from '../utils/date';\r\n\r\ninterface EventCalendarProps {\r\n\tevents: IEvent[];\r\n}\r\n\r\nexport const EventCalendar: FC<EventCalendarProps> = (props) => {\r\n\tfunction dateCellRender(value: Moment) {\r\n\t\tconst formatedDate = formatDate(value?.toDate());\r\n\t\tconst currentDayEvents = props.events.filter(ev => ev.date === formatedDate);\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{currentDayEvents.map((ev, index) =>\r\n\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t{ev.description}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Calendar dateCellRender={dateCellRender} />\r\n\t\t</>\r\n\t)\r\n}\r\n","import moment, { Moment } from 'moment';\r\nexport const rules = {\r\n\trequired: (message: string) => ({\r\n\t\trequired: true,\r\n\t\tmessage: message\r\n\t}),\r\n\tisDateAfter: (message: string) => ({\r\n\t\tvalidator(_: any, value: Moment) {\r\n\t\t\tif (value.isSameOrAfter(moment())) {\r\n\t\t\t\treturn Promise.resolve();\r\n\t\t\t}\r\n\t\t\treturn Promise.reject(new Error(message));\r\n\t\t}\r\n\t})\r\n}","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from '../store/index';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;","import React, { FC, useState } from 'react'\r\nimport { DatePicker, Form, Input, Button, Row, Select } from 'antd';\r\nimport { rules } from '../utils/rules';\r\nimport { IUser } from '../models/IUser';\r\nimport { IEvent } from '../models/IEvent';\r\nimport { Moment } from 'moment';\r\nimport { formatDate } from '../utils/date';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\n\r\n\r\ninterface EventFormProps {\r\n\tguests: IUser[],\r\n\tsubmit: (event: IEvent) => void\r\n}\r\n\r\nexport const EventForm: FC<EventFormProps> = (props) => {\r\n\tconst [event, setEvent] = useState<IEvent>({\r\n\t\tauthor: '',\r\n\t\tdate: '',\r\n\t\tdescription: '',\r\n\t\tguest: ''\r\n\t} as IEvent);\r\n\tconst { user } = useTypedSelector(state => state.auth);\r\n\r\n\tconst SelectDate = (date: Moment | null) => {\r\n\t\tif (date) {\r\n\t\t\tsetEvent({ ...event, date: formatDate(date?.toDate()) })\r\n\t\t}\r\n\t};\r\n\r\n\tconst submitForm = () => {\r\n\t\tprops.submit({ ...event, author: user.username })\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Form onFinish={submitForm}>\r\n\t\t\t<Form.Item\r\n\t\t\t\tlabel=\"Event's description\"\r\n\t\t\t\tname=\"description\"\r\n\t\t\t\trules={[rules.required(\"Please input event's description\")]}\r\n\t\t\t>\r\n\t\t\t\t<Input onChange={(e) => setEvent({ ...event, description: e.target.value })} value={event.description} />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item\r\n\t\t\t\tlabel=\"Event's date\"\r\n\t\t\t\tname=\"date\"\r\n\t\t\t\trules={[rules.required(\"Please input event's date\"), rules.isDateAfter(\"You cannot create an event in the past\")]}\r\n\t\t\t>\r\n\t\t\t\t<DatePicker onChange={(date) => SelectDate(date)} />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item\r\n\t\t\t\tlabel=\"Event's guest\"\r\n\t\t\t\tname=\"guest\"\r\n\t\t\t\trules={[rules.required(\"Please input event's date\")]}\r\n\t\t\t>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tmode=\"multiple\"\r\n\t\t\t\t\tshowSearch\r\n\t\t\t\t\tallowClear\r\n\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\tplaceholder=\"Please select guests\"\r\n\t\t\t\t\tonChange={(guest: string) => setEvent({ ...event, guest })}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.guests.map(guest =>\r\n\t\t\t\t\t\t<Select.Option key={guest.username} value={guest.username}>{guest.username}</Select.Option>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Select>\r\n\t\t\t</Form.Item>\r\n\t\t\t<Row justify=\"end\">\r\n\t\t\t\t<Form.Item wrapperCol={{}}>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" >\r\n\t\t\t\t\t\tCreate Event\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Row>\r\n\t\t</Form >\r\n\t)\r\n}\r\n","import { IUser } from '../../../models/IUser';\r\nimport { IEvent } from '../../../models/IEvent';\r\n\r\n\r\nexport interface EventState {\r\n\tguests: IUser[];\r\n\tevents: IEvent[];\r\n}\r\n\r\n\r\nexport enum EventActionEnum {\r\n\tSET_GUESTS = \"SET_GUESTS\",\r\n\tSET_EVENTS = \"SET_EVENTS\",\r\n};\r\n\r\n\r\nexport interface SetGuestsAction {\r\n\ttype: EventActionEnum.SET_GUESTS;\r\n\tpayload: IUser[],\r\n};\r\nexport interface SetEventsAction {\r\n\ttype: EventActionEnum.SET_EVENTS;\r\n\tpayload: IEvent[],\r\n};\r\n\r\n\r\nexport type EventAction = SetGuestsAction | SetEventsAction;","import { AxiosPromise } from \"axios\";\r\nimport { IUser } from '../models/IUser';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class UserService {\r\n\tstatic async getUsers(): Promise<AxiosPromise<IUser[]>> {\r\n\t\treturn axios.get<IUser[]>('./users.json');\r\n\t}\r\n};","import { IUser } from '../../../models/IUser';\r\nimport { AuthActionEnum, SetUserAction, SetAuthAction, SetIsLoadingAction, SetErrorAction } from './types';\r\nimport { AppDispatch } from '../../index';\r\nimport axios from 'axios';\r\nimport UserService from '../../../api/UserService';\r\n\r\n\r\nexport const AuthActionCreators = {\r\n\tsetUser: (user: IUser): SetUserAction => ({ type: AuthActionEnum.SET_USER, payload: user }),\r\n\tsetIsAuth: (auth: boolean): SetAuthAction => ({ type: AuthActionEnum.SET_AUTH, payload: auth }),\r\n\tsetIsLoading: (isLoading: boolean): SetIsLoadingAction => ({ type: AuthActionEnum.SET_IS_LOADING, payload: isLoading }),\r\n\tsetError: (error: string): SetErrorAction => ({ type: AuthActionEnum.SET_ERROR, payload: error }),\r\n\tlogin: (username: string, password: string) => async (dispatch: AppDispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch(AuthActionCreators.setIsLoading(true));\r\n\t\t\tsetTimeout(async () => {\r\n\t\t\t\tconst response = await UserService.getUsers();\r\n\t\t\t\tconst mockUser = response.data.find(user => user.username === username && user.password === password);\r\n\t\t\t\tif (mockUser) {\r\n\t\t\t\t\tlocalStorage.setItem('auth', 'true');\r\n\t\t\t\t\tlocalStorage.setItem('username', mockUser.username);\r\n\t\t\t\t\tdispatch(AuthActionCreators.setUser(mockUser));\r\n\t\t\t\t\tdispatch(AuthActionCreators.setIsAuth(true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdispatch(AuthActionCreators.setError('Incorrect username or password!'));\r\n\t\t\t\t}\r\n\t\t\t\tdispatch(AuthActionCreators.setIsLoading(false));\r\n\t\t\t}, 1000);\r\n\r\n\t\t} catch (error) {\r\n\t\t\tdispatch(AuthActionCreators.setError('A logging error occurred!'));\r\n\t\t}\r\n\t},\r\n\tlogout: () => async (dispatch: AppDispatch) => {\r\n\t\ttry {\r\n\t\t\tlocalStorage.removeItem('auth');\r\n\t\t\tlocalStorage.removeItem('username');\r\n\t\t\tdispatch(AuthActionCreators.setUser({} as IUser));\r\n\t\t\tdispatch(AuthActionCreators.setIsAuth(false));\r\n\t\t} catch (error) {\r\n\t\t\talert(error)\r\n\t\t}\r\n\t},\r\n}","import { IUser } from '../../../models/IUser';\r\nimport { EventActionEnum, SetGuestsAction, SetEventsAction } from './types';\r\nimport { IEvent } from '../../../models/IEvent';\r\nimport { AppDispatch } from '../../index';\r\nimport UserService from '../../../api/UserService';\r\n\r\n\r\nexport const EventActionCreators = {\r\n\tsetGuests: (payload: IUser[]): SetGuestsAction => ({ type: EventActionEnum.SET_GUESTS, payload }),\r\n\tsetEvents: (payload: IEvent[]): SetEventsAction => ({ type: EventActionEnum.SET_EVENTS, payload }),\r\n\tfetchGuests: () => async (dispatch: AppDispatch) => {\r\n\t\ttry {\r\n\t\t\tconst response = await UserService.getUsers();\r\n\t\t\tdispatch(EventActionCreators.setGuests(response.data))\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t},\r\n\tcreateEvent: (event: IEvent) => async (dispatch: AppDispatch) => {\r\n\t\ttry {\r\n\t\t\tconst events = localStorage.getItem(\"events\") || '[]';\r\n\t\t\tconst json = JSON.parse(events) as IEvent[];\r\n\t\t\tjson.push(event);\r\n\t\t\tdispatch(EventActionCreators.setEvents(json));\r\n\t\t\tlocalStorage.setItem('events', JSON.stringify(json));\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t},\r\n\tfetchEvents: (username: string) => async (dispatch: AppDispatch) => {\r\n\t\ttry {\r\n\t\t\tconst events = localStorage.getItem(\"events\") || '[]';\r\n\t\t\tconst json = JSON.parse(events) as IEvent[];\r\n\t\t\tconst currentUserEvents = json.filter(ev => ev.author === username || ev.guest === username);\r\n\t\t\tdispatch(EventActionCreators.setEvents(currentUserEvents));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\r\n\t\t}\r\n\t}\r\n}","import { Event } from '../pages/Event';\r\nimport { Login } from '../pages/Login';\r\n\r\nexport interface IRoute {\r\n\tpath: string;\r\n\tcomponent: React.ComponentType;\r\n\texact?: boolean;\r\n}\r\n\r\nexport enum RouteNames {\r\n\tLOGIN = '/login',\r\n\tEVENT = '/'\r\n}\r\n\r\nexport const publicRoutes: IRoute[] = [\r\n\t{ path: RouteNames.LOGIN, exact: true, component: Login }\r\n]\r\nexport const privateRoutes: IRoute[] = [\r\n\t{ path: RouteNames.EVENT, exact: true, component: Event }\r\n]","import { AuthActionCreators } from \"./auth/action-creators\";\r\nimport { EventActionCreators } from \"./event/action-creators\";\r\n\r\n\r\nexport const allActionCreators = {\r\n\t...AuthActionCreators,\r\n\t...EventActionCreators\r\n}","import { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { allActionCreators } from '../store/reducers/action-creators';\r\n\r\n\r\nexport const useActions = () => {\r\n\tconst dispatch = useDispatch();\r\n\treturn bindActionCreators(allActionCreators, dispatch);\r\n}","\r\nimport React, { FC, useState } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { rules } from '../utils/rules';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport { useActions } from '../hooks/useActions';\r\n\r\nexport const LoginForm: FC = () => {\r\n\tconst { error, isLoading } = useTypedSelector(state => state.auth);\r\n\tconst [username, setUsername] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst { login } = useActions();\r\n\r\n\tconst submit = () => {\r\n\t\tlogin(username, password);\r\n\t}\r\n\treturn (\r\n\t\t<Form onFinish={submit}\t\t>\r\n\t\t\t{error && <div style={{ color: 'crimson' }}>\r\n\t\t\t\t{error}\r\n\t\t\t</div>}\r\n\t\t\t<Form.Item\r\n\t\t\t\tlabel=\"Username\"\r\n\t\t\t\tname=\"username\"\r\n\t\t\t\trules={[rules.required('Please input your username!')]}\r\n\t\t\t>\r\n\t\t\t\t<Input value={username} onChange={e => setUsername(e.target.value)} />\r\n\t\t\t</Form.Item>\r\n\r\n\t\t\t<Form.Item\r\n\t\t\t\tlabel=\"Password\"\r\n\t\t\t\tname=\"password\"\r\n\t\t\t\trules={[rules.required('Please input your password!')]}\r\n\t\t\t>\r\n\t\t\t\t<Input.Password value={password} onChange={e => setPassword(e.target.value)} />\r\n\t\t\t</Form.Item>\r\n\r\n\t\t\t<Form.Item wrapperCol={{}}>\r\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\r\n\t\t\t\t\tLog In\r\n\t\t\t\t</Button>\r\n\t\t\t</Form.Item>\r\n\r\n\t\t</Form>\r\n\t)\r\n}\r\n","import React, { FC } from 'react'\r\nimport { Card, Layout, Row } from 'antd';\r\nimport { LoginForm } from '../components/LoginForm';\r\n\r\nexport const Login: FC = () => {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<Row justify='center' align='middle' className='h100'>\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<LoginForm />\r\n\t\t\t\t</Card>\r\n\t\t\t</Row>\r\n\t\t</Layout>\r\n\t)\r\n}\r\n","import { Button, Layout, Modal, Row } from 'antd';\r\nimport React, { FC, useEffect, useState } from 'react'\r\nimport { EventCalendar } from '../components/EventCalendar'\r\nimport { EventForm } from '../components/EventForm';\r\nimport { useActions } from '../hooks/useActions';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport { IEvent } from '../models/IEvent';\r\n\r\n\r\nexport const Event: FC = () => {\r\n\tconst [modalVisible, setModalVisible] = useState(false);\r\n\tconst { fetchGuests, createEvent, fetchEvents } = useActions();\r\n\tconst { guests, events } = useTypedSelector(state => state.event);\r\n\tconst { user } = useTypedSelector(state => state.auth)\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchGuests();\r\n\t\tfetchEvents(user.username)\r\n\t}, []);\r\n\r\n\tconst addNewEvent = (event: IEvent) => {\r\n\t\tsetModalVisible(false);\r\n\t\tcreateEvent(event);\r\n\t}\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<EventCalendar events={events} />\r\n\t\t\t<Row justify='center'>\r\n\t\t\t\t<Button onClick={() => setModalVisible(true)}>Create event</Button>\r\n\t\t\t</Row>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Create event\"\r\n\t\t\t\tvisible={modalVisible}\r\n\t\t\t\tfooter={null}\r\n\t\t\t\tonCancel={() => setModalVisible(false)}\r\n\t\t\t>\r\n\t\t\t\t<EventForm guests={guests} submit={addNewEvent} />\r\n\t\t\t</Modal>\r\n\t\t</Layout>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { privateRoutes } from '../routes';\r\nimport { publicRoutes } from './../routes/index';\r\nimport { RouteNames } from '../routes/index';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\n\r\nexport const AppRouter = () => {\r\n\tconst { isAuth } = useTypedSelector(state => state.auth);\r\n\treturn (\r\n\t\tisAuth\r\n\t\t\t?\r\n\t\t\t<Switch>\r\n\t\t\t\t{privateRoutes.map(route =>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath={route.path}\r\n\t\t\t\t\t\texact={route.exact}\r\n\t\t\t\t\t\tcomponent={route.component}\r\n\t\t\t\t\t\tkey={route.path}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<Redirect to={RouteNames.EVENT} />\r\n\t\t\t</Switch>\r\n\t\t\t:\r\n\t\t\t<Switch>\r\n\t\t\t\t{publicRoutes.map(route =>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath={route.path}\r\n\t\t\t\t\t\texact={route.exact}\r\n\t\t\t\t\t\tcomponent={route.component}\r\n\t\t\t\t\t\tkey={route.path}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<Redirect to={RouteNames.LOGIN} />\r\n\t\t\t</Switch>\r\n\t)\r\n}\r\n","import { Layout, Row, Menu } from 'antd';\r\nimport { useHistory } from 'react-router';\r\nimport { RouteNames } from '../routes/index';\r\nimport { useTypedSelector } from './../hooks/useTypedSelector';\r\nimport { useActions } from '../hooks/useActions';\r\n\r\nexport const Navbar = () => {\r\n\tconst router = useHistory();\r\n\tconst { isAuth, user } = useTypedSelector(state => state.auth);\r\n\tconst { logout } = useActions();\r\n\r\n\treturn (\r\n\t\t<Layout.Header>\r\n\t\t\t<Row justify='end'>\r\n\t\t\t\t{isAuth\r\n\t\t\t\t\t?\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div style={{ color: 'white' }}>\r\n\t\t\t\t\t\t\t{user.username}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\r\n\t\t\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\t\t\tonClick={() => logout()}\r\n\t\t\t\t\t\t\t\tkey={1}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLog Out\r\n\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\r\n\t\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\t\tonClick={() => router.push(RouteNames.LOGIN)}\r\n\t\t\t\t\t\t\tkey={1}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tLog In\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</Menu>}\r\n\t\t\t</Row>\r\n\t\t</Layout.Header>\r\n\t)\r\n}\r\n","import { Layout } from 'antd';\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport { AppRouter } from './components/AppRouter';\nimport { Navbar } from './components/Navbar';\nimport { useActions } from './hooks/useActions';\nimport { IUser } from './models/IUser';\n\nexport const App = () => {\n  const { setUser, setIsAuth } = useActions();\n\n  useEffect(() => {\n    if (localStorage.getItem('auth')) {\n      setUser({ username: localStorage.getItem('username' || '') } as IUser);\n      setIsAuth(true);\n    }\n  }, []);\n\n  return (\n    <Layout>\n      <Navbar />\n      <Layout.Content>\n        <AppRouter />\n      </Layout.Content>\n\n    </Layout>\n  );\n};\n\n\n","import { AuthState, AuthAction, AuthActionEnum } from './types';\r\nimport { IUser } from '../../../models/IUser';\r\n\r\nconst initialState: AuthState = {\r\n\tisAuth: false,\r\n\terror: '',\r\n\tisLoading: false,\r\n\tuser: {} as IUser\r\n}\r\n\r\nconst authReducer = (state = initialState, action: AuthAction): AuthState => {\r\n\tswitch (action.type) {\r\n\t\tcase AuthActionEnum.SET_AUTH:\r\n\t\t\treturn { ...state, isAuth: action.payload, isLoading: false }\r\n\t\tcase AuthActionEnum.SET_ERROR:\r\n\t\t\treturn { ...state, error: action.payload, isLoading: false }\r\n\t\tcase AuthActionEnum.SET_USER:\r\n\t\t\treturn { ...state, user: action.payload }\r\n\t\tcase AuthActionEnum.SET_IS_LOADING:\r\n\t\t\treturn { ...state, isLoading: action.payload }\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default authReducer;","import { EventState, EventAction, EventActionEnum } from './types';\r\n\r\n\r\nconst initialState: EventState = {\r\n\tguests: [],\r\n\tevents: [],\r\n}\r\n\r\nexport default function EventReducer(state = initialState, action: EventAction): EventState {\r\n\tswitch (action.type) {\r\n\t\tcase EventActionEnum.SET_GUESTS:\r\n\t\t\treturn { ...state, guests: action.payload }\r\n\t\tcase EventActionEnum.SET_EVENTS:\r\n\t\t\treturn { ...state, events: action.payload }\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import auth from './auth';\r\nimport event from './event'\r\n\r\nexport default {\r\n\tauth,\r\n\tevent\r\n}","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from './reducers'\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\nimport { store } from './store/index';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}